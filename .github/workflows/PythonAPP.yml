name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '*/15 * * * *'  # Se ejecuta cada 15 minutos

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 gitpython requests geojson
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run first Python script
      run: |
        echo "Running first Python script"
        python Request_ADMINSAT.py

    - name: Commit and push changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.email "tu-email@example.com"
        git config --global user.name "tu-nombre-de-usuario"
        git add ubicaciones.geojson || true
        git commit -m "Actualización automática desde GitHub Actions" || echo "No hay cambios para hacer commit"
        git push origin HEAD:main || echo "No hay cambios para hacer push"

    - name: Wait for 2 minutes
      run: |
        echo "Waiting for 2 minutes"
        sleep 20  # Esperar 2 minutos (120 segundos)

    - name: Run second Python script
      run: |
        echo "Running second Python script"
        python Carga_ARCGISONLINE.py
